@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager


<div class="loginPanel">


    <form class="searchBox" asp-action="SearchAuctionAsync" asp-controller="Auction">
        <label id="search-label"></label>
        <input type="text" name="searchString" id="searchstring" value="" placeholder="Search by titel/description" />
        <button type="submit" class="btn btn-xs">Search</button>
    </form>

    @if (SignInManager.IsSignedIn(User))
    {
        <form asp-area="Identity" asp-page="/Account/Logout" method="post" id="logoutForm" class="navbar-right">


            <ul class="nav navbar-nav list-inline">

                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">Hello @UserManager.GetUserName(User)!<span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        <li><a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Settings</a></li>
                        @if (Context.User.IsInRole("Admin"))
                        {
                            <li><a asp-controller="Auction" asp-action="CreateAuction">Create new auction</a></li>
                            <li><a asp-area="" asp-controller="Admin" asp-action="GetUsers">Manage users</a></li>
                            <li><a asp-area="" asp-controller="Admin" asp-action="Chart">Statistic chart</a></li>
                        }
                    </ul>
                <li>
                    <button type="submit" class="btn btn-link navbar-btn navbar-link">Logout</button>
                </li>
            </ul>

        </form>

    }
    else
    {
        <ul class="nav navbar-nav navbar-right">
            <li><a asp-area="Identity" asp-page="/Account/Login">Login</a></li>
            <li><a asp-controller="User" asp-action="Register">Register</a></li>

        </ul>
    }

</div>